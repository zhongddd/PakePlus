{"version":3,"file":"js/160.f2a90b31.js","mappings":"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","sources":["webpack://client/./node_modules/core-js/modules/es.iterator.find.js","webpack://client/./src/views/PublishTaskPool.vue","webpack://client/./src/views/PublishTaskPool.vue?0e39"],"sourcesContent":["'use strict';\nvar $ = require('../internals/export');\nvar call = require('../internals/function-call');\nvar iterate = require('../internals/iterate');\nvar aCallable = require('../internals/a-callable');\nvar anObject = require('../internals/an-object');\nvar getIteratorDirect = require('../internals/get-iterator-direct');\nvar iteratorClose = require('../internals/iterator-close');\nvar iteratorHelperWithoutClosingOnEarlyError = require('../internals/iterator-helper-without-closing-on-early-error');\n\nvar findWithoutClosingOnEarlyError = iteratorHelperWithoutClosingOnEarlyError('find', TypeError);\n\n// `Iterator.prototype.find` method\n// https://tc39.es/ecma262/#sec-iterator.prototype.find\n$({ target: 'Iterator', proto: true, real: true, forced: findWithoutClosingOnEarlyError }, {\n  find: function find(predicate) {\n    anObject(this);\n    try {\n      aCallable(predicate);\n    } catch (error) {\n      iteratorClose(this, 'throw', error);\n    }\n\n    if (findWithoutClosingOnEarlyError) return call(findWithoutClosingOnEarlyError, this, predicate);\n\n    var record = getIteratorDirect(this);\n    var counter = 0;\n    return iterate(record, function (value, stop) {\n      if (predicate(value, counter++)) return stop(value);\n    }, { IS_RECORD: true, INTERRUPTED: true }).result;\n  }\n});\n","<template>\r\n  <div class=\"publish-task-pool\">\r\n    <el-card class=\"box-card\">\r\n      <template #header>\r\n        <div class=\"card-header\">\r\n          <h2>发布任务池</h2>\r\n          <el-button type=\"primary\" @click=\"taskFormVisible = true\">创建发布任务</el-button>\r\n        </div>\r\n      </template>\r\n      \r\n      <!-- 任务池/任务列表 -->\r\n      <div class=\"task-pool\">\r\n        <div v-if=\"tasks.length === 0\" class=\"empty-tasks\">\r\n          <el-empty description=\"暂无任务\"></el-empty>\r\n        </div>\r\n        <el-table v-else :data=\"tasks\" style=\"width: 100%\" v-loading=\"loading\">\r\n          <el-table-column label=\"任务ID\" prop=\"id\" width=\"80\"></el-table-column>\r\n          <el-table-column label=\"关键词\" width=\"200\">\r\n            <template #default=\"scope\">\r\n              <span v-if=\"scope.row.keywords\">{{ scope.row.keywords }}</span>\r\n              <el-tag v-else-if=\"scope.row.keyword_category_name\" type=\"info\">从 {{ scope.row.keyword_category_name }} 分类随机选择</el-tag>\r\n              <el-tag v-else type=\"info\">未指定关键词</el-tag>\r\n            </template>\r\n          </el-table-column>\r\n          <el-table-column label=\"店铺\" width=\"120\">\r\n            <template #default=\"scope\">\r\n              {{ scope.row.shop_name || getShopName(scope.row.shopId || scope.row.shop_id) }}\r\n            </template>\r\n          </el-table-column>\r\n          <el-table-column label=\"数量\" width=\"100\">\r\n            <template #default=\"scope\">\r\n              <span>{{ scope.row.completedCount || scope.row.completed_count || 0 }}/{{ scope.row.count }}</span>\r\n            </template>\r\n          </el-table-column>\r\n          <el-table-column label=\"图片分类\" width=\"150\">\r\n            <template #default=\"scope\">\r\n              {{ scope.row.category_name || getCategoryName(scope.row.categoryId || scope.row.category_id) }}\r\n            </template>\r\n          </el-table-column>\r\n          <el-table-column label=\"创建时间\" width=\"180\">\r\n            <template #default=\"scope\">\r\n              {{ formatTime(scope.row.createTime || scope.row.create_time) }}\r\n            </template>\r\n          </el-table-column>\r\n          <el-table-column label=\"状态\" width=\"120\">\r\n            <template #default=\"scope\">\r\n              <el-tag :type=\"getStatusType(scope.row.status)\">{{ getStatusText(scope.row.status) }}</el-tag>\r\n            </template>\r\n          </el-table-column>\r\n          <el-table-column label=\"操作\" width=\"260\">\r\n            <template #default=\"scope\">\r\n              <el-button \r\n                size=\"small\" \r\n                type=\"primary\" \r\n                @click=\"viewTaskDetail(scope.row)\"\r\n                :disabled=\"scope.row.status === 'PENDING'\"\r\n              >\r\n                查看\r\n              </el-button>\r\n              <el-button \r\n                size=\"small\" \r\n                type=\"danger\" \r\n                @click=\"cancelTask(scope.row)\"\r\n                :disabled=\"['COMPLETED', 'CANCELED', 'FAILED'].includes(scope.row.status)\"\r\n              >\r\n                取消\r\n              </el-button>\r\n              <el-button \r\n                size=\"small\" \r\n                type=\"warning\" \r\n                @click=\"deleteTask(scope.row)\"\r\n                :disabled=\"scope.row.status === 'RUNNING'\"\r\n              >\r\n                删除\r\n              </el-button>\r\n            </template>\r\n          </el-table-column>\r\n        </el-table>\r\n      </div>\r\n    </el-card>\r\n    \r\n    <!-- 创建任务对话框 -->\r\n    <el-dialog\r\n      v-model=\"taskFormVisible\"\r\n      title=\"创建发布任务\"\r\n      width=\"50%\"\r\n    >\r\n      <el-form :model=\"taskForm\" :rules=\"taskRules\" ref=\"taskFormRef\" label-width=\"120px\">\r\n        <!-- 关键词输入方式选择 -->\r\n        <el-form-item label=\"关键词来源\">\r\n          <el-radio-group v-model=\"keywordSource\">\r\n            <el-radio label=\"manual\">手动输入关键词</el-radio>\r\n            <el-radio label=\"category\">从关键词分类中随机选取</el-radio>\r\n          </el-radio-group>\r\n        </el-form-item>\r\n\r\n        <!-- 手动输入关键词 -->\r\n        <el-form-item \r\n          v-if=\"keywordSource === 'manual'\" \r\n          label=\"关键词\" \r\n          prop=\"keywords\"\r\n        >\r\n          <el-input v-model=\"taskForm.keywords\" placeholder=\"请输入商品关键词，多个关键词用逗号分隔\"></el-input>\r\n        </el-form-item>\r\n        \r\n        <!-- 关键词分类选择 -->\r\n        <el-form-item \r\n          v-else\r\n          label=\"关键词分类\" \r\n          prop=\"keywordCategoryId\"\r\n        >\r\n          <el-select v-model=\"taskForm.keywordCategoryId\" placeholder=\"请选择关键词分类\">\r\n            <el-option \r\n              v-for=\"category in keywordCategories\" \r\n              :key=\"category.id\" \r\n              :label=\"`${category.name} (${category.keyword_count}个关键词)`\" \r\n              :value=\"category.id\"\r\n              :disabled=\"category.keyword_count === 0\"\r\n            >\r\n            </el-option>\r\n          </el-select>\r\n          <div v-if=\"taskForm.keywordCategoryId\" class=\"category-hint\">\r\n            <p>系统将为每个商品从此分类中随机选择关键词</p>\r\n          </div>\r\n        </el-form-item>\r\n        \r\n        <el-form-item label=\"发布数量\" prop=\"count\">\r\n          <el-input-number v-model=\"taskForm.count\" :min=\"1\" :max=\"20\" controls-position=\"right\"></el-input-number>\r\n          <span class=\"count-tip\">（最多20个）</span>\r\n        </el-form-item>\r\n        \r\n        <el-form-item label=\"图片分类\" prop=\"categoryId\">\r\n          <el-select v-model=\"taskForm.categoryId\" placeholder=\"请选择图片分类\">\r\n            <el-option \r\n              v-for=\"category in categories\" \r\n              :key=\"category.id\" \r\n              :label=\"`${category.name} (${category.image_count}张)`\" \r\n              :value=\"category.id\">\r\n            </el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        \r\n        <el-form-item label=\"每个商品图片数量\" prop=\"imagesPerProduct\">\r\n          <div style=\"display: flex; align-items: center;\">\r\n            <el-input-number v-model=\"taskForm.minImages\" :min=\"1\" :max=\"9\" controls-position=\"right\"></el-input-number>\r\n            <span style=\"margin: 0 10px;\">至</span>\r\n            <el-input-number v-model=\"taskForm.maxImages\" :min=\"1\" :max=\"9\" controls-position=\"right\"></el-input-number>\r\n            <span class=\"count-tip\">（每个商品随机选取图片数量）</span>\r\n          </div>\r\n        </el-form-item>\r\n        \r\n        <el-form-item label=\"店铺\" prop=\"shopId\">\r\n          <el-select v-model=\"taskForm.shopId\" placeholder=\"请选择店铺\">\r\n            <el-option\r\n              v-for=\"shop in shops\"\r\n              :key=\"shop.id\"\r\n              :label=\"shop.shop_name\"\r\n              :value=\"shop.id\"\r\n            />\r\n          </el-select>\r\n        </el-form-item>\r\n        \r\n        <el-form-item label=\"商品价格\" prop=\"price\">\r\n          <el-input-number\r\n            v-model=\"taskForm.price\"\r\n            :min=\"0.01\"\r\n            :precision=\"2\"\r\n            :step=\"0.01\"\r\n            controls-position=\"right\"\r\n          />\r\n          <span class=\"price-tip\">单位：元</span>\r\n        </el-form-item>\r\n        \r\n        <el-form-item label=\"商品服务\">\r\n          <el-checkbox-group v-model=\"taskForm.services\">\r\n            <el-checkbox label=\"SDR\">七天无理由退货</el-checkbox>\r\n            <el-checkbox label=\"NFR\">描述不符包邮退</el-checkbox>\r\n            <el-checkbox label=\"VNR\">描述不符全额退（虚拟类）</el-checkbox>\r\n            <el-checkbox label=\"FD_10MS\">10分钟极速发货（虚拟类）</el-checkbox>\r\n            <el-checkbox label=\"FD_24HS\">24小时极速发货</el-checkbox>\r\n            <el-checkbox label=\"FD_48HS\">48小时极速发货</el-checkbox>\r\n            <el-checkbox label=\"FD_GPA\">正品保障</el-checkbox>\r\n          </el-checkbox-group>\r\n        </el-form-item>\r\n      </el-form>\r\n      <template #footer>\r\n        <span class=\"dialog-footer\">\r\n          <el-button @click=\"taskFormVisible = false\">取消</el-button>\r\n          <el-button @click=\"resetTaskForm\">重置</el-button>\r\n          <el-button type=\"primary\" @click=\"createTask\" :loading=\"creating\">创建任务</el-button>\r\n        </span>\r\n      </template>\r\n    </el-dialog>\r\n    \r\n    <!-- 任务详情对话框 -->\r\n    <el-dialog\r\n      v-model=\"taskDetailVisible\"\r\n      title=\"任务详情\"\r\n      width=\"70%\"\r\n    >\r\n      <div v-if=\"currentTask\" class=\"task-detail\">\r\n        <el-descriptions title=\"任务信息\" :column=\"2\" border>\r\n          <el-descriptions-item label=\"任务ID\">{{ currentTask.id }}</el-descriptions-item>\r\n          <el-descriptions-item label=\"关键词\">\r\n            <span v-if=\"currentTask.keywords\">{{ currentTask.keywords }}</span>\r\n            <el-tag v-else-if=\"currentTask.keyword_category_name\" type=\"info\">从 {{ currentTask.keyword_category_name }} 分类随机选择</el-tag>\r\n            <el-tag v-else type=\"info\">未指定关键词</el-tag>\r\n          </el-descriptions-item>\r\n          <el-descriptions-item label=\"店铺\">{{ currentTask.shop_name || getShopName(currentTask.shopId || currentTask.shop_id) }}</el-descriptions-item>\r\n          <el-descriptions-item label=\"发布数量\">{{ currentTask.count }}</el-descriptions-item>\r\n          <el-descriptions-item label=\"已完成\">{{ currentTask.completedCount || currentTask.completed_count || 0 }}</el-descriptions-item>\r\n          <el-descriptions-item label=\"商品图片数量\">\r\n            {{ (currentTask.minImages || currentTask.min_images) === (currentTask.maxImages || currentTask.max_images) ? \r\n               (currentTask.minImages || currentTask.min_images) : \r\n               `${currentTask.minImages || currentTask.min_images || 1}~${currentTask.maxImages || currentTask.max_images || 5}` }} 张\r\n          </el-descriptions-item>\r\n          <el-descriptions-item label=\"图片分类\">{{ currentTask.category_name || getCategoryName(currentTask.categoryId || currentTask.category_id) }}</el-descriptions-item>\r\n          <el-descriptions-item label=\"创建时间\">{{ formatTime(currentTask.createTime || currentTask.create_time) }}</el-descriptions-item>\r\n          <el-descriptions-item label=\"状态\">\r\n            <el-tag :type=\"getStatusType(currentTask.status)\">{{ getStatusText(currentTask.status) }}</el-tag>\r\n          </el-descriptions-item>\r\n        </el-descriptions>\r\n        \r\n        <h4>发布记录</h4>\r\n        <el-table :data=\"currentTask.publishLogs || []\" stripe style=\"width: 100%\">\r\n          <el-table-column label=\"序号\" type=\"index\" width=\"60\"></el-table-column>\r\n          <el-table-column label=\"商品标题\" prop=\"title\" min-width=\"200\"></el-table-column>\r\n          <el-table-column label=\"使用关键词\" prop=\"keyword\" width=\"150\"></el-table-column>\r\n          <el-table-column label=\"商品ID\" prop=\"productId\" width=\"120\"></el-table-column>\r\n          <el-table-column label=\"发布时间\" width=\"180\">\r\n            <template #default=\"scope\">\r\n              {{ formatTime(scope.row.publishTime) }}\r\n            </template>\r\n          </el-table-column>\r\n          <el-table-column label=\"状态\" width=\"120\">\r\n            <template #default=\"scope\">\r\n              <el-tag :type=\"scope.row.status === 'success' ? 'success' : 'danger'\">\r\n                {{ scope.row.status === 'success' ? '成功' : '失败' }}\r\n              </el-tag>\r\n            </template>\r\n          </el-table-column>\r\n        </el-table>\r\n      </div>\r\n      <template #footer>\r\n        <span class=\"dialog-footer\">\r\n          <el-button @click=\"taskDetailVisible = false\">关闭</el-button>\r\n        </span>\r\n      </template>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, reactive, onMounted, onBeforeUnmount } from 'vue'\r\nimport { ElMessage, ElMessageBox } from 'element-plus'\r\nimport { useUserStore } from '@/stores/user'\r\n\r\nexport default {\r\n  name: 'PublishTaskPool',\r\n  setup() {\r\n    const userStore = useUserStore()\r\n    \r\n    // 表单相关\r\n    const taskFormRef = ref(null)\r\n    const taskFormVisible = ref(false)\r\n    const taskForm = reactive({\r\n      keywords: '',\r\n      keywordCategoryId: '',\r\n      count: 1,\r\n      categoryId: '',\r\n      shopId: '',\r\n      price: 9.9,\r\n      minImages: 1,  // 默认最少1张图片\r\n      maxImages: 5,  // 默认最多5张图片\r\n      services: ['SDR', 'NFR'] // 默认选中七天无理由和描述不符包邮退\r\n    })\r\n    \r\n    // 关键词来源选择\r\n    const keywordSource = ref('manual')\r\n    \r\n    // 验证规则\r\n    const taskRules = {\r\n      keywords: [\r\n        { required: true, message: '请输入商品关键词', trigger: 'blur' }\r\n      ],\r\n      keywordCategoryId: [\r\n        { required: true, message: '请选择关键词分类', trigger: 'change' }\r\n      ],\r\n      count: [\r\n        { required: true, message: '请输入发布数量', trigger: 'blur' },\r\n        { type: 'number', min: 1, message: '发布数量必须大于0', trigger: 'blur' }\r\n      ],\r\n      categoryId: [\r\n        { required: true, message: '请选择图片分类', trigger: 'change' }\r\n      ],\r\n      shopId: [\r\n        { required: true, message: '请选择店铺', trigger: 'change' }\r\n      ],\r\n      price: [\r\n        { required: true, message: '请输入商品价格', trigger: 'blur' },\r\n        { type: 'number', min: 0.01, message: '价格必须大于0', trigger: 'blur' }\r\n      ]\r\n    }\r\n    \r\n    // 数据相关\r\n    const loading = ref(false)\r\n    const creating = ref(false)\r\n    const shops = ref([])\r\n    const categories = ref([])\r\n    const keywordCategories = ref([])\r\n    const tasks = ref([])\r\n    const taskDetailVisible = ref(false)\r\n    const currentTask = ref(null)\r\n    \r\n    // 定时刷新任务状态\r\n    let refreshTimer = null\r\n    \r\n    // 获取关键词分类\r\n    const fetchKeywordCategories = async () => {\r\n      try {\r\n        const response = await fetch('/api/keywordCategories', {\r\n          method: 'GET',\r\n          headers: {\r\n            'Authorization': `Bearer ${userStore.token}`\r\n          }\r\n        })\r\n        \r\n        const result = await response.json()\r\n        \r\n        if (!result.error && result.data) {\r\n          keywordCategories.value = result.data\r\n        } else {\r\n          ElMessage.error(`获取关键词分类失败: ${result.message || '未知错误'}`)\r\n        }\r\n      } catch (error) {\r\n        console.error('获取关键词分类异常:', error)\r\n        ElMessage.error('网络异常，请稍后重试')\r\n      }\r\n    }\r\n    \r\n    // 获取店铺列表\r\n    const fetchShops = async () => {\r\n      try {\r\n        const response = await fetch('/api/shops', {\r\n          method: 'GET',\r\n          headers: {\r\n            'Authorization': `Bearer ${userStore.token}`\r\n          }\r\n        })\r\n        \r\n        const result = await response.json()\r\n        \r\n        if (!result.error && result.data) {\r\n          shops.value = result.data\r\n          \r\n          // 如果只有一个店铺，自动选择\r\n          if (shops.value.length === 1) {\r\n            taskForm.shopId = shops.value[0].id\r\n          }\r\n        } else {\r\n          ElMessage.error(`获取店铺列表失败: ${result.message || '未知错误'}`)\r\n        }\r\n      } catch (error) {\r\n        console.error('获取店铺列表异常:', error)\r\n        ElMessage.error('网络异常，请稍后重试')\r\n      }\r\n    }\r\n    \r\n    // 获取图片分类\r\n    const fetchCategories = async () => {\r\n      try {\r\n        const response = await fetch('/api/image-categories', {\r\n          headers: {\r\n            'Authorization': `Bearer ${userStore.token}`\r\n          }\r\n        })\r\n        \r\n        if (response.ok) {\r\n          const result = await response.json()\r\n          if (!result.error && result.data) {\r\n            categories.value = result.data\r\n          } else {\r\n            ElMessage.error('获取图片分类失败')\r\n          }\r\n        } else {\r\n          ElMessage.error('获取图片分类失败')\r\n        }\r\n      } catch (error) {\r\n        console.error('获取图片分类异常:', error)\r\n        ElMessage.error('网络异常，请稍后重试')\r\n      }\r\n    }\r\n    \r\n    // 获取任务列表\r\n    const fetchTasks = async () => {\r\n      try {\r\n        loading.value = true\r\n        const response = await fetch('/api/publish-tasks', {\r\n          headers: {\r\n            'Authorization': `Bearer ${userStore.token}`\r\n          }\r\n        })\r\n        \r\n        if (response.ok) {\r\n          const result = await response.json()\r\n          if (!result.error && result.data) {\r\n            tasks.value = result.data\r\n            \r\n            // 确保所有数据已加载\r\n            if (!shops.value.length) {\r\n              await fetchShops()\r\n            }\r\n            if (!categories.value.length) {\r\n              await fetchCategories()\r\n            }\r\n          } else {\r\n            ElMessage.error('获取任务列表失败')\r\n          }\r\n        } else {\r\n          ElMessage.error('获取任务列表失败')\r\n        }\r\n      } catch (error) {\r\n        console.error('获取任务列表异常:', error)\r\n        ElMessage.error('网络异常，请稍后重试')\r\n      } finally {\r\n        loading.value = false\r\n      }\r\n    }\r\n    \r\n    // 创建任务\r\n    const createTask = async () => {\r\n      if (!taskFormRef.value) return\r\n      \r\n      try {\r\n        // 根据当前选择的关键词来源设置验证规则\r\n        if (keywordSource.value === 'manual') {\r\n          // 手动输入关键词 - 验证keywords字段\r\n          taskRules.keywords[0].required = true\r\n          taskRules.keywordCategoryId = []  // 清除分类验证\r\n        } else {\r\n          // 关键词分类 - 验证keywordCategoryId字段\r\n          taskRules.keywords = []  // 清除关键词验证\r\n          taskRules.keywordCategoryId = [\r\n            { required: true, message: '请选择关键词分类', trigger: 'change' }\r\n          ]\r\n        }\r\n        \r\n        await taskFormRef.value.validate()\r\n        \r\n        creating.value = true\r\n        \r\n        // 获取Coze API设置\r\n        const apiSettings = localStorage.getItem('apiSettings')\r\n        if (!apiSettings) {\r\n          ElMessage.error('请先在设置页面配置Coze API')\r\n          return\r\n        }\r\n        \r\n        const parsed = JSON.parse(apiSettings)\r\n        if (!parsed.cozeApiToken || !parsed.cozeWorkflowId) {\r\n          ElMessage.error('Coze API设置不完整，请先在设置页面完成配置')\r\n          return\r\n        }\r\n        \r\n        // 构建任务数据\r\n        const taskData = {\r\n          shopId: taskForm.shopId,\r\n          price: taskForm.price,\r\n          minImages: taskForm.minImages,\r\n          maxImages: taskForm.maxImages,\r\n          services: taskForm.services.join(','),\r\n          count: taskForm.count,\r\n          categoryId: taskForm.categoryId,\r\n          apiSettings: {\r\n            cozeApiToken: parsed.cozeApiToken,\r\n            cozeWorkflowId: parsed.cozeWorkflowId,\r\n            cozeBotId: parsed.cozeBotId || '',\r\n          }\r\n        }\r\n        \r\n        // 根据关键词来源添加不同的字段\r\n        if (keywordSource.value === 'manual') {\r\n          taskData.keywords = taskForm.keywords\r\n        } else {\r\n          taskData.keywordCategoryId = taskForm.keywordCategoryId\r\n        }\r\n        \r\n        // 添加调试日志\r\n        console.log('创建任务数据:', JSON.stringify(taskData, null, 2))\r\n        console.log('关键词来源:', keywordSource.value)\r\n        console.log('关键词分类ID:', taskForm.keywordCategoryId)\r\n        \r\n        // 调用创建任务API\r\n        const response = await fetch('/api/publish-tasks', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Authorization': `Bearer ${userStore.token}`,\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify(taskData)\r\n        })\r\n        \r\n        if (response.ok) {\r\n          const result = await response.json()\r\n          if (!result.error) {\r\n            ElMessage.success('任务创建成功')\r\n            taskFormVisible.value = false\r\n            resetTaskForm()\r\n            fetchTasks()\r\n          } else {\r\n            ElMessage.error(`创建任务失败: ${result.message}`)\r\n          }\r\n        } else {\r\n          const errorData = await response.json()\r\n          ElMessage.error(`创建任务失败: ${errorData.message || '未知错误'}`)\r\n        }\r\n      } catch (error) {\r\n        console.error('创建任务异常:', error)\r\n        ElMessage.error('创建任务失败，请稍后重试')\r\n      } finally {\r\n        creating.value = false\r\n      }\r\n    }\r\n    \r\n    // 取消任务\r\n    const cancelTask = (task) => {\r\n      ElMessageBox.confirm(\r\n        `确定要取消任务 #${task.id} 吗？`,\r\n        '取消确认',\r\n        {\r\n          confirmButtonText: '确定',\r\n          cancelButtonText: '取消',\r\n          type: 'warning'\r\n        }\r\n      ).then(async () => {\r\n        try {\r\n          const response = await fetch(`/api/publish-tasks/${task.id}/cancel`, {\r\n            method: 'POST',\r\n            headers: {\r\n              'Authorization': `Bearer ${userStore.token}`\r\n            }\r\n          })\r\n          \r\n          if (response.ok) {\r\n            const result = await response.json()\r\n            if (!result.error) {\r\n              ElMessage.success('任务已取消')\r\n              fetchTasks()\r\n            } else {\r\n              ElMessage.error(`取消任务失败: ${result.message}`)\r\n            }\r\n          } else {\r\n            ElMessage.error('取消任务失败')\r\n          }\r\n        } catch (error) {\r\n          console.error('取消任务异常:', error)\r\n          ElMessage.error('网络异常，请稍后重试')\r\n        }\r\n      }).catch(() => {})\r\n    }\r\n    \r\n    // 删除任务\r\n    const deleteTask = (task) => {\r\n      ElMessageBox.confirm(\r\n        `确定要删除任务 #${task.id} 吗？此操作无法恢复。`,\r\n        '删除确认',\r\n        {\r\n          confirmButtonText: '确定',\r\n          cancelButtonText: '取消',\r\n          type: 'warning'\r\n        }\r\n      ).then(async () => {\r\n        try {\r\n          const response = await fetch(`/api/publish-tasks/${task.id}`, {\r\n            method: 'DELETE',\r\n            headers: {\r\n              'Authorization': `Bearer ${userStore.token}`\r\n            }\r\n          })\r\n          \r\n          if (response.ok) {\r\n            const result = await response.json()\r\n            if (!result.error) {\r\n              ElMessage.success('任务已删除')\r\n              fetchTasks()\r\n            } else {\r\n              ElMessage.error(`删除任务失败: ${result.message}`)\r\n            }\r\n          } else {\r\n            ElMessage.error('删除任务失败')\r\n          }\r\n        } catch (error) {\r\n          console.error('删除任务异常:', error)\r\n          ElMessage.error('网络异常，请稍后重试')\r\n        }\r\n      }).catch(() => {})\r\n    }\r\n    \r\n    // 查看任务详情\r\n    const viewTaskDetail = async (task) => {\r\n      currentTask.value = task\r\n      \r\n      try {\r\n        const response = await fetch(`/api/publish-tasks/${task.id}/detail`, {\r\n          headers: {\r\n            'Authorization': `Bearer ${userStore.token}`\r\n          }\r\n        })\r\n        \r\n        if (response.ok) {\r\n          const result = await response.json()\r\n          if (!result.error && result.data) {\r\n            currentTask.value = {\r\n              ...currentTask.value,\r\n              ...result.data\r\n            }\r\n            taskDetailVisible.value = true\r\n          } else {\r\n            ElMessage.error('获取任务详情失败')\r\n          }\r\n        } else {\r\n          ElMessage.error('获取任务详情失败')\r\n        }\r\n      } catch (error) {\r\n        console.error('获取任务详情异常:', error)\r\n        ElMessage.error('网络异常，请稍后重试')\r\n      }\r\n    }\r\n    \r\n    // 重置表单\r\n    const resetTaskForm = () => {\r\n      if (taskFormRef.value) {\r\n        taskFormRef.value.resetFields()\r\n      }\r\n    }\r\n    \r\n    // 获取店铺名称\r\n    const getShopName = (shopId) => {\r\n      const shop = shops.value.find(s => s.id === shopId)\r\n      return shop ? shop.shop_name : '未知店铺'\r\n    }\r\n    \r\n    // 获取分类名称\r\n    const getCategoryName = (categoryId) => {\r\n      const category = categories.value.find(c => c.id === categoryId)\r\n      return category ? category.name : '未知分类'\r\n    }\r\n    \r\n    // 格式化时间\r\n    const formatTime = (timestamp) => {\r\n      if (!timestamp) return '-'\r\n      const date = new Date(timestamp)\r\n      return `${date.toLocaleDateString()} ${date.toLocaleTimeString()}`\r\n    }\r\n    \r\n    // 获取状态类型\r\n    const getStatusType = (status) => {\r\n      switch (status) {\r\n        case 'RUNNING': return 'primary'\r\n        case 'COMPLETED': return 'success'\r\n        case 'FAILED': return 'danger'\r\n        case 'CANCELED': return 'info'\r\n        default: return 'warning'\r\n      }\r\n    }\r\n    \r\n    // 获取状态文本\r\n    const getStatusText = (status) => {\r\n      switch (status) {\r\n        case 'PENDING': return '等待中'\r\n        case 'RUNNING': return '执行中'\r\n        case 'COMPLETED': return '已完成'\r\n        case 'FAILED': return '失败'\r\n        case 'CANCELED': return '已取消'\r\n        default: return '未知'\r\n      }\r\n    }\r\n    \r\n    // 定时刷新任务状态\r\n    const startRefreshTimer = () => {\r\n      // 立即进行第一次刷新\r\n      fetchTasks()\r\n      \r\n        refreshTimer = setInterval(() => {\r\n    // 总是刷新，确保任何状态变化都能被及时捕获\r\n    fetchTasks()\r\n        \r\n        if (taskDetailVisible.value && currentTask.value) {\r\n          // 如果正在查看任务详情，也刷新详情\r\n          viewTaskDetail(currentTask.value)\r\n        }\r\n      }, 5000) // 每5秒刷新一次，提高刷新频率\r\n    }\r\n    \r\n    // 初始化\r\n    onMounted(() => {\r\n      fetchShops()\r\n      fetchCategories()\r\n      fetchKeywordCategories()\r\n      fetchTasks()\r\n      startRefreshTimer()\r\n    })\r\n    \r\n    // 组件卸载前清除定时器\r\n    onBeforeUnmount(() => {\r\n      if (refreshTimer) {\r\n        clearInterval(refreshTimer)\r\n      }\r\n    })\r\n    \r\n    return {\r\n      taskFormRef,\r\n      taskForm,\r\n      taskFormVisible,\r\n      taskRules,\r\n      loading,\r\n      creating,\r\n      shops,\r\n      categories,\r\n      keywordCategories,\r\n      keywordSource,\r\n      tasks,\r\n      taskDetailVisible,\r\n      currentTask,\r\n      createTask,\r\n      cancelTask,\r\n      deleteTask,\r\n      viewTaskDetail,\r\n      resetTaskForm,\r\n      getShopName,\r\n      getCategoryName,\r\n      formatTime,\r\n      getStatusType,\r\n      getStatusText\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.publish-task-pool {\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n}\r\n\r\n.card-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\nh3 {\r\n  font-size: 18px;\r\n  margin-bottom: 20px;\r\n  font-weight: 500;\r\n}\r\n\r\nh4 {\r\n  font-size: 16px;\r\n  margin: 20px 0;\r\n  font-weight: 500;\r\n}\r\n\r\n.count-tip, .price-tip {\r\n  margin-left: 10px;\r\n  color: #909399;\r\n  font-size: 14px;\r\n}\r\n\r\n.category-hint {\r\n  margin-top: 8px;\r\n  font-size: 12px;\r\n  color: #909399;\r\n}\r\n\r\n.task-pool {\r\n  margin-top: 20px;\r\n}\r\n\r\n.empty-tasks {\r\n  padding: 30px 0;\r\n  text-align: center;\r\n}\r\n\r\n.task-detail {\r\n  padding: 0 20px;\r\n}\r\n\r\n.el-checkbox-group {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 10px;\r\n}\r\n\r\n.el-checkbox {\r\n  margin-right: 15px;\r\n}\r\n\r\n.dialog-footer {\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  gap: 10px;\r\n}\r\n</style> ","import { render } from \"./PublishTaskPool.vue?vue&type=template&id=5d7ef207&scoped=true\"\nimport script from \"./PublishTaskPool.vue?vue&type=script&lang=js\"\nexport * from \"./PublishTaskPool.vue?vue&type=script&lang=js\"\n\nimport \"./PublishTaskPool.vue?vue&type=style&index=0&id=5d7ef207&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-5d7ef207\"]])\n\nexport default __exports__"],"names":["$","call","iterate","aCallable","anObject","getIteratorDirect","iteratorClose","iteratorHelperWithoutClosingOnEarlyError","findWithoutClosingOnEarlyError","TypeError","target","proto","real","forced","find","predicate","this","error","record","counter","value","stop","IS_RECORD","INTERRUPTED","result","class","style","_createElementBlock","_hoisted_1","_createVNode","_component_el_card","header","_withCtx","_createElementVNode","_hoisted_2","_component_el_button","type","onClick","_cache","$event","$setup","taskFormVisible","_hoisted_3","tasks","length","_hoisted_4","_component_el_empty","description","_createBlock","_component_el_table","data","_component_el_table_column","label","prop","width","default","scope","row","keywords","_hoisted_5","_toDisplayString","keyword_category_name","_component_el_tag","shop_name","getShopName","shopId","shop_id","completedCount","completed_count","count","category_name","getCategoryName","categoryId","category_id","formatTime","createTime","create_time","getStatusType","status","getStatusText","size","viewTaskDetail","disabled","cancelTask","includes","deleteTask","loading","_component_el_dialog","title","footer","_hoisted_8","resetTaskForm","createTask","creating","_component_el_form","model","taskForm","rules","taskRules","ref","_component_el_form_item","_component_el_radio_group","keywordSource","_component_el_radio","_component_el_input","placeholder","_component_el_select","keywordCategoryId","_Fragment","_renderList","keywordCategories","category","_component_el_option","key","id","name","keyword_count","_hoisted_6","_component_el_input_number","min","max","categories","image_count","_hoisted_7","minImages","maxImages","shops","shop","price","precision","step","_component_el_checkbox_group","services","_component_el_checkbox","taskDetailVisible","_hoisted_11","currentTask","_hoisted_9","_component_el_descriptions","column","border","_component_el_descriptions_item","_hoisted_10","min_images","max_images","publishLogs","stripe","publishTime","setup","userStore","useUserStore","taskFormRef","reactive","required","message","trigger","refreshTimer","fetchKeywordCategories","async","response","fetch","method","headers","token","json","ElMessage","console","fetchShops","fetchCategories","ok","fetchTasks","validate","apiSettings","localStorage","getItem","parsed","JSON","parse","cozeApiToken","cozeWorkflowId","taskData","join","cozeBotId","log","stringify","body","success","errorData","task","ElMessageBox","confirm","confirmButtonText","cancelButtonText","then","catch","resetFields","s","c","timestamp","date","Date","toLocaleDateString","toLocaleTimeString","startRefreshTimer","setInterval","onMounted","onBeforeUnmount","clearInterval","__exports__","render"],"sourceRoot":""}